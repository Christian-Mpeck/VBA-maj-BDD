Sub MAJ_BDD_IM()
    ' Étape 1 : Retrouver le Tableau "BDD_IM"
    Dim ws As Worksheet
    Dim tbl As ListObject
    Dim tableauTrouve As Boolean
    
    tableauTrouve = False
    
    ' Parcourir toutes les feuilles du classeur
    For Each ws In ThisWorkbook.Worksheets
        ' Parcourir tous les objets de liste (tables) dans chaque feuille
        For Each tbl In ws.ListObjects
            If tbl.Name = "BDD_IM" Then
                tableauTrouve = True
                Exit For
            End If
        Next tbl
        If tableauTrouve Then Exit For
    Next ws
    
    ' Vérifier si le tableau a été trouvé
    If tableauTrouve Then
        MsgBox "Tableau trouvé"
        
        ' Étape 2 : Chercher la cellule "Date de début" dans tout le tableau
        Dim celluleDateDebut As Range
        Dim colonneDateDebutIndex As Integer
        Dim derniereValeurDateDebut As Variant
        Dim cell As Range
        
        Set celluleDateDebut = Nothing
        
        ' Rechercher la cellule "Date de début" dans tout le tableau
        On Error Resume Next
        For Each cell In tbl.Range
            If cell.Value = "Date de début" Then
                Set celluleDateDebut = cell
                Exit For
            End If
        Next cell
        On Error GoTo 0
        
        ' Vérifier si la cellule a été trouvée
        If Not celluleDateDebut Is Nothing Then
            colonneDateDebutIndex = celluleDateDebut.Column - tbl.Range.Cells(1, 1).Column + 1
            MsgBox "Cellule 'Date de début' trouvée dans la colonne " & colonneDateDebutIndex
            
            ' Trouver la dernière valeur non vide de cette colonne
            Dim colRange As Range
            Dim i As Long
            
            Set colRange = tbl.ListColumns(colonneDateDebutIndex).DataBodyRange
            For i = colRange.Rows.count To 1 Step -1
                If Not IsEmpty(colRange.Cells(i, 1).Value) Then
                    derniereValeurDateDebut = colRange.Cells(i, 1).Value
                    Exit For
                End If
            Next i
            
            ' Vérifier si la dernière valeur correspond à la date d'hier
            Dim dateHier As Date
            dateHier = Date - 1
            
            ' Remplir les dates manquantes jusqu'à la date d'hier
            Do While derniereValeurDateDebut < dateHier
                i = i + 1
                colRange.Cells(i, 1).Value = DateAdd("d", 1, derniereValeurDateDebut)
                derniereValeurDateDebut = colRange.Cells(i, 1).Value
            Loop
            
            MsgBox "La dernière valeur ajustée à la date d'hier est : " & derniereValeurDateDebut
            
            ' Déterminer la dernière ligne non vide dans la colonne "Date de début"
            Dim derniereLigne As Long
            derniereLigne = colRange.Cells(i, 1).Row
            
            ' Récupérer la ligne de la cellule "Tag PI"
            Dim ligneTagPI As Long
            Dim celluleTagPI As Range
            Set celluleTagPI = Nothing
            On Error Resume Next
            For Each cell In tbl.Range
                If cell.Value = "Tag PI" Then
                    Set celluleTagPI = cell
                    Exit For
                End If
            Next cell
            On Error GoTo 0
            
            If Not celluleTagPI Is Nothing Then
                ligneTagPI = celluleTagPI.Row - tbl.Range.Cells(1, 1).Row + 1
                MsgBox "Cellule 'Tag PI' trouvée à la ligne " & ligneTagPI
            Else
                MsgBox "Cellule 'Tag PI' non trouvée"
                Exit Sub
            End If
            
            ' Étape 3 : Récupérer la ligne de la cellule "Type de calcul"
            Dim ligneTypeCalcul As Long
            Dim celluleTypeCalcul As Range
            Set celluleTypeCalcul = Nothing
            On Error Resume Next
            For Each cell In tbl.Range
                If cell.Value = "Type de calcul" Then
                    Set celluleTypeCalcul = cell
                    Exit For
                End If
            Next cell
            On Error GoTo 0
            
            If Not celluleTypeCalcul Is Nothing Then
                ligneTypeCalcul = celluleTypeCalcul.Row - tbl.Range.Cells(1, 1).Row + 1
                MsgBox "Cellule 'Type de calcul' trouvée à la ligne " & ligneTypeCalcul
            Else
                MsgBox "Cellule 'Type de calcul' non trouvée"
                Exit Sub
            End If
            
            ' Configuration de l'add-in PI DataLink
            Dim addIn As COMAddIn
            Dim automationObject As Object
            
            On Error Resume Next
            Set addIn = Application.COMAddIns("PI DataLink")
            On Error GoTo 0
            
            If Not addIn Is Nothing Then
                Set automationObject = addIn.Object
                MsgBox "PI DataLink add-in trouvé"
            Else
                MsgBox "PI DataLink add-in non trouvé"
                Exit Sub
            End If
            
            ' Étape 4 : Parcourir chaque cellule vide du tableau et la remplacer par "Vide"
            Dim r As Range
            For Each r In tbl.DataBodyRange
                If IsEmpty(r.Value) Then
                ' Récupérer les valeurs des arguments
                        Dim arg1 As Variant, arg2 As Variant, arg3 As Variant
                        Dim arg4 As Variant, arg5 As Variant, arg6 As Variant
                        Dim arg7 As Variant, arg8 As Variant, arg9 As Variant
                        
                        ' Récupérer les valeurs des arguments selon vos instructions
                        arg1 = tbl.DataBodyRange.Cells(ligneTagPI, r).Value ' Ligne "Tag PI", colonne actuelle
                        arg2 = tbl.DataBodyRange.Cells(r, 1).Value ' Colonne 1, ligne actuelle
                        arg3 = tbl.DataBodyRange.Cells(r, 2).Value ' Colonne 2, ligne actuelle
                        ' Déterminer la valeur de l'argument 4
                        If typeCalcul = "total" Then
                            arg4 = "total"
                        ElseIf typeCalcul = "moyenne" Then
                            arg4 = "average (time-weighted)"
                        Else
                            arg4 = "" ' Mettre une valeur par défaut ou ignorer cette cellule
                        End If
                        
                        ' Définir les autres arguments
                        arg5 = "time-weighted"
                        arg6 = 0
                        arg7 = 1
                        arg8 = 0
                        arg9 = "" ' Argument vide
                        
                    r.Value = "=PIAdvCalcval(arg1;arg2;arg3;arg4;arg5;arg6;arg7;arg8;arg9)"
                End If
            Next r
            
        Else
            MsgBox "Cellule 'Date de début' non trouvée"
        End If
    Else
        MsgBox "Pas de tableau"
    End If
End Sub
